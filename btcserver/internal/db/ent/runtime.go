// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/generativelabs/btcserver/internal/db/ent/globalstate"
	"github.com/generativelabs/btcserver/internal/db/ent/schema"
	"github.com/generativelabs/btcserver/internal/db/ent/stake"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	globalstateFields := schema.GlobalState{}.Fields()
	_ = globalstateFields
	// globalstateDescUpdateAt is the schema descriptor for UpdateAt field.
	globalstateDescUpdateAt := globalstateFields[3].Descriptor()
	// globalstate.DefaultUpdateAt holds the default value on creation for the UpdateAt field.
	globalstate.DefaultUpdateAt = globalstateDescUpdateAt.Default.(int64)
	stakeFields := schema.Stake{}.Fields()
	_ = stakeFields
	// stakeDescStaker is the schema descriptor for Staker field.
	stakeDescStaker := stakeFields[0].Descriptor()
	// stake.StakerValidator is a validator for the "Staker" field. It is called by the builders before save.
	stake.StakerValidator = stakeDescStaker.Validators[0].(func(string) error)
	// stakeDescTx is the schema descriptor for Tx field.
	stakeDescTx := stakeFields[2].Descriptor()
	// stake.TxValidator is a validator for the "Tx" field. It is called by the builders before save.
	stake.TxValidator = stakeDescTx.Validators[0].(func(string) error)
	// stakeDescStart is the schema descriptor for Start field.
	stakeDescStart := stakeFields[3].Descriptor()
	// stake.DefaultStart holds the default value on creation for the Start field.
	stake.DefaultStart = stakeDescStart.Default.(int64)
	// stakeDescDeadline is the schema descriptor for Deadline field.
	stakeDescDeadline := stakeFields[5].Descriptor()
	// stake.DefaultDeadline holds the default value on creation for the Deadline field.
	stake.DefaultDeadline = stakeDescDeadline.Default.(int64)
	// stakeDescReleasingTime is the schema descriptor for ReleasingTime field.
	stakeDescReleasingTime := stakeFields[6].Descriptor()
	// stake.DefaultReleasingTime holds the default value on creation for the ReleasingTime field.
	stake.DefaultReleasingTime = stakeDescReleasingTime.Default.(int64)
	// stakeDescRewardReceiver is the schema descriptor for RewardReceiver field.
	stakeDescRewardReceiver := stakeFields[8].Descriptor()
	// stake.RewardReceiverValidator is a validator for the "RewardReceiver" field. It is called by the builders before save.
	stake.RewardReceiverValidator = stakeDescRewardReceiver.Validators[0].(func(string) error)
	// stakeDescFinalizedStatus is the schema descriptor for FinalizedStatus field.
	stakeDescFinalizedStatus := stakeFields[10].Descriptor()
	// stake.DefaultFinalizedStatus holds the default value on creation for the FinalizedStatus field.
	stake.DefaultFinalizedStatus = stakeDescFinalizedStatus.Default.(int)
	// stakeDescReleaseStatus is the schema descriptor for ReleaseStatus field.
	stakeDescReleaseStatus := stakeFields[11].Descriptor()
	// stake.DefaultReleaseStatus holds the default value on creation for the ReleaseStatus field.
	stake.DefaultReleaseStatus = stakeDescReleaseStatus.Default.(int)
	// stakeDescSubmitStatus is the schema descriptor for SubmitStatus field.
	stakeDescSubmitStatus := stakeFields[12].Descriptor()
	// stake.DefaultSubmitStatus holds the default value on creation for the SubmitStatus field.
	stake.DefaultSubmitStatus = stakeDescSubmitStatus.Default.(int)
	// stakeDescUpdateAt is the schema descriptor for UpdateAt field.
	stakeDescUpdateAt := stakeFields[16].Descriptor()
	// stake.DefaultUpdateAt holds the default value on creation for the UpdateAt field.
	stake.DefaultUpdateAt = stakeDescUpdateAt.Default.(int64)
}
